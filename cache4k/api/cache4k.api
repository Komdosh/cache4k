public abstract interface class io/github/reactivecircus/cache4k/Cache {
	public abstract fun asMap ()Ljava/util/Map;
	public abstract fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun get (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun invalidate (Ljava/lang/Object;)V
	public abstract fun invalidateAll ()V
	public abstract fun put (Ljava/lang/Object;Ljava/lang/Object;)V
}

public abstract interface class io/github/reactivecircus/cache4k/Cache$Builder {
	public static final field Companion Lio/github/reactivecircus/cache4k/Cache$Builder$Companion;
	public abstract fun build ()Lio/github/reactivecircus/cache4k/Cache;
	public abstract fun expireAfterAccess-LRDsOJo (J)Lio/github/reactivecircus/cache4k/Cache$Builder;
	public abstract fun expireAfterWrite-LRDsOJo (J)Lio/github/reactivecircus/cache4k/Cache$Builder;
	public abstract fun fakeTimeSource (Lio/github/reactivecircus/cache4k/FakeTimeSource;)Lio/github/reactivecircus/cache4k/Cache$Builder;
	public abstract fun maximumCacheSize (J)Lio/github/reactivecircus/cache4k/Cache$Builder;
}

public final class io/github/reactivecircus/cache4k/Cache$Builder$Companion {
	public final fun newBuilder ()Lio/github/reactivecircus/cache4k/Cache$Builder;
}

public final class io/github/reactivecircus/cache4k/CacheBuilderImpl : io/github/reactivecircus/cache4k/Cache$Builder {
	public static final field Companion Lio/github/reactivecircus/cache4k/CacheBuilderImpl$Companion;
	public static final field UNSET_LONG J
	public fun <init> ()V
	public fun build ()Lio/github/reactivecircus/cache4k/Cache;
	public synthetic fun expireAfterAccess-LRDsOJo (J)Lio/github/reactivecircus/cache4k/Cache$Builder;
	public fun expireAfterAccess-LRDsOJo (J)Lio/github/reactivecircus/cache4k/CacheBuilderImpl;
	public synthetic fun expireAfterWrite-LRDsOJo (J)Lio/github/reactivecircus/cache4k/Cache$Builder;
	public fun expireAfterWrite-LRDsOJo (J)Lio/github/reactivecircus/cache4k/CacheBuilderImpl;
	public synthetic fun fakeTimeSource (Lio/github/reactivecircus/cache4k/FakeTimeSource;)Lio/github/reactivecircus/cache4k/Cache$Builder;
	public fun fakeTimeSource (Lio/github/reactivecircus/cache4k/FakeTimeSource;)Lio/github/reactivecircus/cache4k/CacheBuilderImpl;
	public synthetic fun maximumCacheSize (J)Lio/github/reactivecircus/cache4k/Cache$Builder;
	public fun maximumCacheSize (J)Lio/github/reactivecircus/cache4k/CacheBuilderImpl;
}

public final class io/github/reactivecircus/cache4k/CacheBuilderImpl$Companion {
}

public final class io/github/reactivecircus/cache4k/FakeTimeSource : kotlin/time/AbstractLongTimeSource {
	public fun <init> ()V
	public final fun plusAssign-LRDsOJo (J)V
}

public final class io/github/reactivecircus/cache4k/RealCache : io/github/reactivecircus/cache4k/Cache {
	public synthetic fun <init> (JJJLkotlin/time/TimeSource;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun asMap ()Ljava/util/Map;
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getExpireAfterAccessDuration-UwyO8pc ()J
	public final fun getExpireAfterWriteDuration-UwyO8pc ()J
	public final fun getMaxSize ()J
	public final fun getTimeSource ()Lkotlin/time/TimeSource;
	public fun invalidate (Ljava/lang/Object;)V
	public fun invalidateAll ()V
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)V
}

public final class io/github/reactivecircus/cache4k/ReorderingIsoMutableSet : co/touchlab/stately/collections/IsoMutableSet, java/util/Set, kotlin/jvm/internal/markers/KMutableSet {
	public fun <init> ()V
	public fun add (Ljava/lang/Object;)Z
}

